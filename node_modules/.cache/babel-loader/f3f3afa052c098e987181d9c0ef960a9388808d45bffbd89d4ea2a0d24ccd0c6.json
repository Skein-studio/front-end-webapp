{"ast":null,"code":"var _jsxFileName = \"/Users/denipersson/Documents/GitHub/front-end-webapp/src/View/GenreDropdown.tsx\",\n  _s = $RefreshSig$();\n// GenreDropdown.tsx\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst availableGenres = ['Pop', 'Rock', 'Classical', 'Jazz', 'Blues', 'Country', 'Hip Hop', 'R&B', 'Reggae', 'Electronic', 'Dance', 'Folk', 'Funk', 'Gospel', 'Heavy Metal', 'Indie', 'Latin', 'New Age', 'Punk', 'Rap', 'Salsa', 'Samba', 'Soul', 'Techno', 'Trance', 'World', 'Alternative', 'Ambient', 'Baroque', 'Celtic', 'Disco', 'Dubstep', 'EDM (Electronic Dance Music)', 'Grunge', 'House', 'K-Pop (Korean Pop)', 'Motown', 'Opera', 'Psychedelic', 'Reggaeton', 'Anime', 'Fantasy', 'Epic', 'J-pop', 'J-rock']; // Add more as required\n\nexport default function GenreDropdown(_ref) {\n  _s();\n  let {\n    onChange\n  } = _ref;\n  const [selectedGenre, setSelectedGenre] = useState('');\n  function handleChange(event) {\n    const genre = event.target.value;\n    setSelectedGenre(genre);\n    onChange(genre);\n  }\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    value: selectedGenre,\n    onChange: handleChange,\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      children: \"Select a genre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), availableGenres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: genre,\n      children: genre\n    }, genre, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 43\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(GenreDropdown, \"/fXJBJ5qs23SYv89dkuXJnd6Kz0=\");\n_c = GenreDropdown;\nvar _c;\n$RefreshReg$(_c, \"GenreDropdown\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","availableGenres","GenreDropdown","_ref","_s","onChange","selectedGenre","setSelectedGenre","handleChange","event","genre","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["/Users/denipersson/Documents/GitHub/front-end-webapp/src/View/GenreDropdown.tsx"],"sourcesContent":["// GenreDropdown.tsx\nimport { useState } from 'react';\n\ninterface Props {\n    onChange: (genre: string) => void;\n}\n\nconst availableGenres = ['Pop',\n'Rock',\n'Classical',\n'Jazz',\n'Blues',\n'Country',\n'Hip Hop',\n'R&B',\n'Reggae',\n'Electronic',\n'Dance',\n'Folk',\n'Funk',\n'Gospel',\n'Heavy Metal',\n'Indie',\n'Latin',\n'New Age',\n'Punk',\n'Rap',\n'Salsa',\n'Samba',\n'Soul',\n'Techno',\n'Trance',\n'World',\n'Alternative',\n'Ambient',\n'Baroque',\n'Celtic',\n'Disco',\n'Dubstep',\n'EDM (Electronic Dance Music)',\n'Grunge',\n'House',\n'K-Pop (Korean Pop)',\n'Motown',\n'Opera',\n'Psychedelic',\n'Reggaeton', \n'Anime',\n'Fantasy',\n'Epic',\n'J-pop',\n'J-rock']; // Add more as required\n\nexport default function GenreDropdown({ onChange }: Props) {\n    const [selectedGenre, setSelectedGenre] = useState('');\n\n    function handleChange(event: React.ChangeEvent<HTMLSelectElement>) {\n        const genre = event.target.value;\n        setSelectedGenre(genre);\n        onChange(genre);\n    }\n\n    return (\n        <select value={selectedGenre} onChange={handleChange}>\n            <option value=\"\">Select a genre</option>\n            {availableGenres.map(genre => <option key={genre} value={genre}>{genre}</option>)}\n        </select>\n    );\n}\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMjC,MAAMC,eAAe,GAAG,CAAC,KAAK,EAC9B,MAAM,EACN,WAAW,EACX,MAAM,EACN,OAAO,EACP,SAAS,EACT,SAAS,EACT,KAAK,EACL,QAAQ,EACR,YAAY,EACZ,OAAO,EACP,MAAM,EACN,MAAM,EACN,QAAQ,EACR,aAAa,EACb,OAAO,EACP,OAAO,EACP,SAAS,EACT,MAAM,EACN,KAAK,EACL,OAAO,EACP,OAAO,EACP,MAAM,EACN,QAAQ,EACR,QAAQ,EACR,OAAO,EACP,aAAa,EACb,SAAS,EACT,SAAS,EACT,QAAQ,EACR,OAAO,EACP,SAAS,EACT,8BAA8B,EAC9B,QAAQ,EACR,OAAO,EACP,oBAAoB,EACpB,QAAQ,EACR,OAAO,EACP,aAAa,EACb,WAAW,EACX,OAAO,EACP,SAAS,EACT,MAAM,EACN,OAAO,EACP,QAAQ,CAAC,CAAC,CAAC;;AAEX,eAAe,SAASC,aAAaA,CAAAC,IAAA,EAAsB;EAAAC,EAAA;EAAA,IAArB;IAAEC;EAAgB,CAAC,GAAAF,IAAA;EACrD,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtD,SAASU,YAAYA,CAACC,KAA2C,EAAE;IAC/D,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IAChCL,gBAAgB,CAACG,KAAK,CAAC;IACvBL,QAAQ,CAACK,KAAK,CAAC;EACnB;EAEA,oBACIV,OAAA;IAAQY,KAAK,EAAEN,aAAc;IAACD,QAAQ,EAAEG,YAAa;IAAAK,QAAA,gBACjDb,OAAA;MAAQY,KAAK,EAAC,EAAE;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACvChB,eAAe,CAACiB,GAAG,CAACR,KAAK,iBAAIV,OAAA;MAAoBY,KAAK,EAAEF,KAAM;MAAAG,QAAA,EAAEH;IAAK,GAA3BA,KAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA+B,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7E,CAAC;AAEjB;AAACb,EAAA,CAfuBF,aAAa;AAAAiB,EAAA,GAAbjB,aAAa;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}