{"ast":null,"code":"var _jsxFileName = \"/Users/denipersson/Documents/GitHub/front-end-webapp/src/View/CreateSongView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport RecordPresenter from \"../Presenter/RecordPresenter\";\nimport { OuterBox, Text, Button } from \"../Util/BaseStyles\";\nimport InstrumentToggle from \"./InstrumentToggle\";\nimport GenreDropdown from \"./GenreDropdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateSongView(props) {\n  _s();\n  const {\n    instruments,\n    onToggleInstrument,\n    onGenreChange,\n    onFileChange,\n    audioFile,\n    genre\n  } = props;\n  const [showPrompt, setShowPrompt] = useState(false);\n  const prompt = `A ${genre}-themed song with the following instruments:\\n ${instruments.join(', ')}`;\n  function handleCreateButtonClick() {\n    if (audioFile) {\n      setShowPrompt(true);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(OuterBox, {\n    row: false,\n    children: [/*#__PURE__*/_jsxDEV(InstrumentToggle, {\n      instruments: instruments,\n      onToggleInstrument: onToggleInstrument\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GenreDropdown, {\n      onChange: onGenreChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RecordPresenter, {\n      onFileChange: onFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleCreateButtonClick,\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), showPrompt && /*#__PURE__*/_jsxDEV(Text, {\n      children: [\"Resulting prompt: \", prompt]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateSongView, \"mFTAwezUWOPiq0ujwOHBpcVwpVM=\");\n_c = CreateSongView;\nvar _c;\n$RefreshReg$(_c, \"CreateSongView\");","map":{"version":3,"names":["React","useState","RecordPresenter","OuterBox","Text","Button","InstrumentToggle","GenreDropdown","jsxDEV","_jsxDEV","CreateSongView","props","_s","instruments","onToggleInstrument","onGenreChange","onFileChange","audioFile","genre","showPrompt","setShowPrompt","prompt","join","handleCreateButtonClick","row","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/denipersson/Documents/GitHub/front-end-webapp/src/View/CreateSongView.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport RecordPresenter from \"../Presenter/RecordPresenter\"\nimport { OuterBox, Text, Button, InnerBox } from \"../Util/BaseStyles\"\nimport InstrumentToggle from \"./InstrumentToggle\";\nimport GenreDropdown from \"./GenreDropdown\"\n\ninterface Props {\n    instruments: string[];\n    onToggleInstrument: (instrument: string) => void;\n    onGenreChange: (genre: string) => void;\n    onFileChange: (file: File | null) => void;\n    audioFile: File | null;\n    genre: string;\n}\n\nexport default function CreateSongView(props:Props) {\n    const {instruments, onToggleInstrument, onGenreChange, onFileChange, audioFile, genre} = props;\n    const [showPrompt, setShowPrompt] = useState(false);\n\n    const prompt = `A ${genre}-themed song with the following instruments:\\n ${instruments.join(', ')}`;\n\n    function handleCreateButtonClick() {\n        if (audioFile) {\n            setShowPrompt(true);\n        }\n    }\n\n    return (\n        <OuterBox row={false}>\n            <InstrumentToggle instruments={instruments} onToggleInstrument={onToggleInstrument} />\n            <GenreDropdown onChange={onGenreChange} />\n            <RecordPresenter onFileChange={onFileChange} />\n            <Button onClick={handleCreateButtonClick}>Create</Button>\n            {\n                showPrompt && <Text>Resulting prompt: {prompt}</Text>\n            }\n        </OuterBox>\n    )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,SAASC,QAAQ,EAAEC,IAAI,EAAEC,MAAM,QAAkB,oBAAoB;AACrE,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,aAAa,MAAM,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAW3C,eAAe,SAASC,cAAcA,CAACC,KAAW,EAAE;EAAAC,EAAA;EAChD,MAAM;IAACC,WAAW;IAAEC,kBAAkB;IAAEC,aAAa;IAAEC,YAAY;IAAEC,SAAS;IAAEC;EAAK,CAAC,GAAGP,KAAK;EAC9F,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMoB,MAAM,GAAI,KAAIH,KAAM,kDAAiDL,WAAW,CAACS,IAAI,CAAC,IAAI,CAAE,EAAC;EAEnG,SAASC,uBAAuBA,CAAA,EAAG;IAC/B,IAAIN,SAAS,EAAE;MACXG,aAAa,CAAC,IAAI,CAAC;IACvB;EACJ;EAEA,oBACIX,OAAA,CAACN,QAAQ;IAACqB,GAAG,EAAE,KAAM;IAAAC,QAAA,gBACjBhB,OAAA,CAACH,gBAAgB;MAACO,WAAW,EAAEA,WAAY;MAACC,kBAAkB,EAAEA;IAAmB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtFpB,OAAA,CAACF,aAAa;MAACuB,QAAQ,EAAEf;IAAc;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1CpB,OAAA,CAACP,eAAe;MAACc,YAAY,EAAEA;IAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/CpB,OAAA,CAACJ,MAAM;MAAC0B,OAAO,EAAER,uBAAwB;MAAAE,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAErDV,UAAU,iBAAIV,OAAA,CAACL,IAAI;MAAAqB,QAAA,GAAC,oBAAkB,EAACJ,MAAM;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEnD,CAAC;AAEnB;AAACjB,EAAA,CAvBuBF,cAAc;AAAAsB,EAAA,GAAdtB,cAAc;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}