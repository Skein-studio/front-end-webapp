{"ast":null,"code":"var _jsxFileName = \"/Users/denipersson/Documents/GitHub/front-end-webapp/src/View/InstrumentToggle.tsx\";\n// InstrumentToggle.tsx\nimport { Button, InnerBox } from '../Util/BaseStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst availableInstruments = ['Pop', 'Rock', 'Classical', 'Jazz', 'Blues', 'Country', 'Hip Hop', 'R&B', 'Reggae', 'Electronic', 'Dance', 'Folk', 'Funk', 'Gospel', 'Heavy Metal', 'Indie', 'Latin', 'New Age', 'Punk', 'Rap', 'Salsa', 'Samba', 'Soul', 'Techno', 'Trance', 'World', 'Alternative', 'Ambient', 'Baroque', 'Celtic', 'Disco', 'Dubstep', 'EDM (Electronic Dance Music)', 'Grunge', 'House', 'K-Pop (Korean Pop)', 'Motown', 'Opera', 'Psychedelic', 'Reggaeton']; // Add more as required\n\nexport default function InstrumentToggle(_ref) {\n  let {\n    instruments,\n    onToggleInstrument\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(InnerBox, {\n    flexdir: \"row\",\n    children: availableInstruments.map(instrument => /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => onToggleInstrument(instrument),\n      style: {\n        backgroundColor: instruments.includes(instrument) ? 'lightcoral' : 'white'\n      },\n      children: instrument\n    }, instrument, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_c = InstrumentToggle;\nvar _c;\n$RefreshReg$(_c, \"InstrumentToggle\");","map":{"version":3,"names":["Button","InnerBox","jsxDEV","_jsxDEV","availableInstruments","InstrumentToggle","_ref","instruments","onToggleInstrument","flexdir","children","map","instrument","onClick","style","backgroundColor","includes","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/denipersson/Documents/GitHub/front-end-webapp/src/View/InstrumentToggle.tsx"],"sourcesContent":["// InstrumentToggle.tsx\nimport { Button, InnerBox } from '../Util/BaseStyles';\n\ninterface Props {\n    instruments: string[];\n    onToggleInstrument: (instrument: string) => void;\n}\n\nconst availableInstruments = ['Pop',\n'Rock',\n'Classical',\n'Jazz',\n'Blues',\n'Country',\n'Hip Hop',\n'R&B',\n'Reggae',\n'Electronic',\n'Dance',\n'Folk',\n'Funk',\n'Gospel',\n'Heavy Metal',\n'Indie',\n'Latin',\n'New Age',\n'Punk',\n'Rap',\n'Salsa',\n'Samba',\n'Soul',\n'Techno',\n'Trance',\n'World',\n'Alternative',\n'Ambient',\n'Baroque',\n'Celtic',\n'Disco',\n'Dubstep',\n'EDM (Electronic Dance Music)',\n'Grunge',\n'House',\n'K-Pop (Korean Pop)',\n'Motown',\n'Opera',\n'Psychedelic',\n'Reggaeton']; // Add more as required\n\nexport default function InstrumentToggle({ instruments, onToggleInstrument }: Props) {\n    return (\n        <InnerBox flexdir='row'>\n            {availableInstruments.map(instrument => (\n                <Button \n                    key={instrument} \n                    onClick={() => onToggleInstrument(instrument)}\n                    style={{ backgroundColor: instruments.includes(instrument) ? 'lightcoral' : 'white' }}\n                >\n                    {instrument}\n                </Button>\n            ))}\n        </InnerBox>\n    );\n}\n"],"mappings":";AAAA;AACA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOtD,MAAMC,oBAAoB,GAAG,CAAC,KAAK,EACnC,MAAM,EACN,WAAW,EACX,MAAM,EACN,OAAO,EACP,SAAS,EACT,SAAS,EACT,KAAK,EACL,QAAQ,EACR,YAAY,EACZ,OAAO,EACP,MAAM,EACN,MAAM,EACN,QAAQ,EACR,aAAa,EACb,OAAO,EACP,OAAO,EACP,SAAS,EACT,MAAM,EACN,KAAK,EACL,OAAO,EACP,OAAO,EACP,MAAM,EACN,QAAQ,EACR,QAAQ,EACR,OAAO,EACP,aAAa,EACb,SAAS,EACT,SAAS,EACT,QAAQ,EACR,OAAO,EACP,SAAS,EACT,8BAA8B,EAC9B,QAAQ,EACR,OAAO,EACP,oBAAoB,EACpB,QAAQ,EACR,OAAO,EACP,aAAa,EACb,WAAW,CAAC,CAAC,CAAC;;AAEd,eAAe,SAASC,gBAAgBA,CAAAC,IAAA,EAA6C;EAAA,IAA5C;IAAEC,WAAW;IAAEC;EAA0B,CAAC,GAAAF,IAAA;EAC/E,oBACIH,OAAA,CAACF,QAAQ;IAACQ,OAAO,EAAC,KAAK;IAAAC,QAAA,EAClBN,oBAAoB,CAACO,GAAG,CAACC,UAAU,iBAChCT,OAAA,CAACH,MAAM;MAEHa,OAAO,EAAEA,CAAA,KAAML,kBAAkB,CAACI,UAAU,CAAE;MAC9CE,KAAK,EAAE;QAAEC,eAAe,EAAER,WAAW,CAACS,QAAQ,CAACJ,UAAU,CAAC,GAAG,YAAY,GAAG;MAAQ,CAAE;MAAAF,QAAA,EAErFE;IAAU,GAJNA,UAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKX,CACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEnB;AAACC,EAAA,GAduBhB,gBAAgB;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}